plugin:

  # Editing <<<

  ## Operators <<<
  kana/vim-operator-user: {}

  rhysd/vim-operator-surround:
    dependon: kana/vim-operator-user
    before: |
      map <silent>sa <Plug>(operator-surround-append)
      map <silent>sd <Plug>(operator-surround-delete)
      map <silent>sr <Plug>(operator-surround-replace)
      map <silent>ss <Plug>(operator-surround-delete)a

  ## >>>

  ## Textobjs <<<
  kana/vim-textobj-user: {}

  rhysd/vim-textobj-wiw:
    dependon: kana/vim-textobj-user
    mapmode:
      - o
      - v
    mapping:
      - am
      - im

  sgur/vim-textobj-parameter:
    dependon: kana/vim-textobj-user
    mapmode:
      - o
      - v
    mapping:
      - a,
      - i,

  kana/vim-textobj-underscore:
    dependon: textobj-user
    mapmode:
      - o
      - v
    mapping:
      - <Plug>(textobj-underscore-a)
      - <Plug>(textobj-underscore-i)
      - i_
      - a_
  ## >>>

  # >>>

  # Visuals <<<
  Yggdroot/indentLine:
    before: |
      let g:indentLine_first_char = "▍"
      let g:indentLine_char_list = ['▏', '┆', '┊', '┊', '┊']
      let g:indentLine_showFirstIndentLevel = 1
      let g:indentLine_faster = 1

  luochen1990/rainbow:
    before: |
      let g:rainbow_active = 1
      let g:rainbow_conf = { 'separately': {} }
      for ft in [
          \ "css", "text", "html", "javascript", "quickrun", "lua", "help",
          \ "qf", "agit", "agit_diff", "agit_stat", "diff", "gitcommit", "coq",
          \ "clojure"
          \ ]
        let g:rainbow_conf.separately[ft] = 0
      endfor
  # >>>

  # Colorschemes <<<
  nanotech/jellybeans.vim:
    before: |
      let g:jellybeans_overrides= { 'background': {'guibg': 'none' } }
      let g:jellybeans_use_term_italics = 1

  micke/vim-hybrid:
    before: |
      let g:hybrid_transparent = 1

  reedes/vim-colors-pencil: {}
  franbach/miramare:
    before: |
      let g:miramare_transparent_background = 1
  # >>>

after:
  colorscheme jellybeans

filetype:
  haskell: |
    inoremap <buffer> <C-l> <space>-> 
    setlocal colorcolumn=79 shiftround nojoinspaces
  rust: |
    inoremap <buffer> <C-l> <space>-> 
  plaintex: |
    iabbrev an &
    let g:tex_conceal=""
  tex: |
    iabbrev an &
    let g:tex_conceal=""
    setlocal backspace=indent,eol
  latex: |
    iabbrev an &
    let g:tex_conceal=""
    setlocal backspace=indent,eol
  gitcommit: |
    setlocal spell

# vim: set expandtab ts=2 sw=2 sts=2 fdm=marker fmr=<<<,>>> fdl=5:
